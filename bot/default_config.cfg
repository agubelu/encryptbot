##################################################################
# Please do not remove any options from this file.               #
# If you want to revert to default values, just delete this file #
# and a new one will be automatically generated for you.         #
##################################################################

# Use the staging (testing) server by default. It does not issue valid certificates but it's useful for testing, since it has almost no rate limit.
# Setting this option to false will issue trusted, valid certificates. Be wary of Let's Encrypt limits.
staging="true"

# Account email (might get notified of certificate expiration)
email="youremail@example.com"

# Folder to copy certificates into after a successful request/renewal, an empty value disables the copy
folder_copy_cert=""

# Folder to copy certificate keys into after a successful request/renewal, an empty value disables the copy
folder_copy_key=""

# Selects whether encryptbot will generate a chained cert or not.
# By default, yourdomain.crt will be chained to the intermediate certificates. Disabling this option will generate a chain.crt file that contains the chain instead.
chained_certs="true"

# Public key algorithm to be used. Valid values are "rsa", "prime256v1" and "secp384r1"
algorithm="rsa"

# Public key length in bits. Usual values are 2048 for RSA and 256 for elliptic curves, you can however use higher values if you wish to.
# Keep in mind that using a lower key length might result in Let's Encrypt refusing to sign your certificate.
key_length="2048"

# Days until certificate expiration in which you allow the cert to be renewed
# E.g. setting this value to 30 will make encryptbot to not renew a certificate until its expiration day is closer than 30 days.
# You can bypass this by using the -f flag.
renewal_time="30"

# Command to be run after a successful certificate request/renewal, might be useful to restart your web server.
after_command=""